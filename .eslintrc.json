{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.json",
		"ecmaVersion": 12,
		"sourceType": "module"
	},
	"env": {
		"browser": true,
		"es6": true,
		"node": true
	},
	"plugins": [
		"@typescript-eslint"
	],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended"
	],
	"rules": {
		"no-var": "error",
		"no-undef-init": "error",
		"complexity": "off",
		"guard-for-in": "error",
		"eqeqeq": [
			"error",
			"smart"
		],
		"id-denylist": [
			"error",
			"any",
			"Number",
			"number",
			"String",
			"string",
			"Boolean",
			"boolean",
			"Undefined",
			"undefined"
		],
		"new-parens": [
			"error"
		],
		"no-bitwise": "error",
		"no-caller": "error",
		"no-eval": "error",
		"no-new-wrappers": "error",
		"no-restricted-imports": [
			"error",
			"rxjs/Rx"
		],
		"no-underscore-dangle": [
			"off",
			{
				"allowAfterThis": true
			}
		],
		"prefer-arrow-callback": "error",
		"prefer-const": "error",
		"quote-props": [
			"error",
			"as-needed"
		],
		"space-in-parens": "warn",
		"spaced-comment": "warn",
		"no-trailing-spaces": "warn",
		"no-fallthrough": "warn",
		"no-multiple-empty-lines": "warn",
		"curly": [
			"warn",
			"multi-line"
		],
		"brace-style": [
			"warn",
			"1tbs",
			{
				"allowSingleLine": true
			}
		],
		"arrow-parens": [
			"warn",
			"always"
		],
		"newline-per-chained-call": [
			"warn",
			{
				"ignoreChainWithDepth": 3
			}
		],
		"semi": "off",
		"@typescript-eslint/semi": [
			"warn",
			"never"
		],
		"dot-notation": "off",
		"@typescript-eslint/dot-notation": [
			"error"
		],
		"comma-dangle": "off",
		"@typescript-eslint/comma-dangle": [
			"warn"
		],
		"func-call-spacing": "off",
		"@typescript-eslint/func-call-spacing": [
			"warn"
		],
		"space-before-function-paren": "off",
		"@typescript-eslint/space-before-function-paren": [
			"warn",
			"never"
		],
		"indent": "off",
		"@typescript-eslint/indent": [
			"warn",
			"tab"
		],
		"keyword-spacing": "off",
		"@typescript-eslint/keyword-spacing": [
			"warn"
		],
		"no-dupe-class-members": "off",
		"@typescript-eslint/no-dupe-class-members": [
			"error"
		],
		"no-duplicate-imports": "off",
		"@typescript-eslint/no-duplicate-imports": [
			"error"
		],
		"no-extra-parens": "off",
		"@typescript-eslint/no-extra-parens": [
			"warn"
		],
		"no-invalid-this": "off",
		"@typescript-eslint/no-invalid-this": [
			"error"
		],
		"no-loss-of-precision": "off",
		"@typescript-eslint/no-loss-of-precision": [
			"error"
		],
		"no-magic-numbers": "off",
		"@typescript-eslint/no-magic-numbers": [
			"off",
			{
				"ignoreEnums": true,
				"ignoreNumericLiteralTypes": true,
				"ignoreReadonlyClassProperties": true
			}
		],
		"no-redeclare": "off",
		"@typescript-eslint/no-redeclare": [
			"error"
		],
		"no-shadow": "off",
		"@typescript-eslint/no-shadow": [
			"error"
		],
		"no-throw-literal": "off",
		"@typescript-eslint/no-throw-literal": [
			"error"
		],
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": "off",
		"no-unused-expressions": "off",
		"@typescript-eslint/no-unused-expressions": [
			"warn"
		],
		"no-useless-constructor": "off",
		"@typescript-eslint/no-useless-constructor": [
			"error"
		],
		"object-curly-spacing": "off",
		"@typescript-eslint/object-curly-spacing": [
			"warn",
			"always"
		],
		"quotes": "off",
		"@typescript-eslint/quotes": [
			"warn",
			"single"
		],
		"space-infix-ops": "off",
		"@typescript-eslint/space-infix-ops": [
			"warn",
			{
				"int32Hint": false
			}
		],
		"@typescript-eslint/member-delimiter-style": [
			"warn",
			{
				"multiline": {
					"delimiter": "none",
					"requireLast": false
				}
			}
		],
		"@typescript-eslint/no-inferrable-types": [
			"warn",
			{
				"ignoreParameters": true,
				"ignoreProperties": true
			}
		],
		"@typescript-eslint/ban-types": [
			"error",
			{
				"types": {
					"Object": {
						"message": "Avoid using the `Object` type. Did you mean `object`?"
					},
					"Boolean": {
						"message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
					},
					"Number": {
						"message": "Avoid using the `Number` type. Did you mean `number`?"
					},
					"String": {
						"message": "Avoid using the `String` type. Did you mean `string`?"
					},
					"Symbol": {
						"message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
					}
				},
				"extendDefaults": false
			}
		],
		"@typescript-eslint/array-type": "warn",
		"@typescript-eslint/consistent-type-assertions": [
			"error",
			{
				"assertionStyle": "as",
				"objectLiteralTypeAssertions": "never"
			}
		],
		"@typescript-eslint/explicit-function-return-type": [
			"error",
			{
				"allowExpressions": true
			}
		],
		"@typescript-eslint/explicit-member-accessibility": "warn",
		"@typescript-eslint/member-ordering": [
			"warn",
			{
				"default": [
					// Index signature
					"signature",
					// Static Fields
					"public-static-field",
					"protected-static-field",
					"private-static-field",
					// Static Methods
					"public-static-method",
					"protected-static-method",
					"private-static-method",
					// Instance Fields
					"public-abstract-field",
					"public-decorated-field",
					"public-instance-field",
					"protected-abstract-field",
					"protected-decorated-field",
					"protected-instance-field",
					"private-abstract-field",
					"private-decorated-field",
					"private-instance-field",
					// Constructors
					"public-constructor",
					"protected-constructor",
					"private-constructor",
					// Instance Methods
					"public-abstract-method",
					"protected-abstract-method",
					"private-abstract-method",
					"public-decorated-method",
					"public-instance-method",
					"protected-decorated-method",
					"protected-instance-method",
					"private-decorated-method",
					"private-instance-method"
				]
			}
		],
		"@typescript-eslint/naming-convention": [
			"warn",
			{
				"selector": "typeLike",
				"format": [
					"PascalCase"
				],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "variableLike",
				"format": [
					"camelCase"
				],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "memberLike",
				"modifiers": [
					"public"
				],
				"format": [
					"camelCase"
				],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "memberLike",
				"modifiers": [
					"private",
					"protected"
				],
				"format": [
					"camelCase"
				],
				"leadingUnderscore": "allow",
				"trailingUnderscore": "forbid"
			}
		],
		"@typescript-eslint/no-confusing-non-null-assertion": "warn",
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
		"@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/prefer-includes": "warn",
		"@typescript-eslint/prefer-nullish-coalescing": "error",
		"@typescript-eslint/prefer-optional-chain": "warn",
		"@typescript-eslint/prefer-readonly-parameter-types": [
			"off",
			{
				"checkParameterProperties": false
			}
		],
		"@typescript-eslint/prefer-string-starts-ends-with": "warn",
		"@typescript-eslint/strict-boolean-expressions": "off",
		"@typescript-eslint/switch-exhaustiveness-check": "error",
		"@typescript-eslint/type-annotation-spacing": "warn",
		"@typescript-eslint/typedef": [
			"warn",
			{
				"arrowParameter": true,
				"memberVariableDeclaration": true,
				"parameter": true,
				"propertyDeclaration": true
			}
		]
	}
}
